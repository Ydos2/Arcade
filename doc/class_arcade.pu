@startuml core

set namespaceSeparator ::

namespace arcade {
    class Core

    namespace lib {

        interface ILibrary {
            + init(scene)
            + update(scene, at)
            + end(scene)
        }

        interface IGraphic {
        }

        interface IGame {
            + void onKeyDown(event)
            + void onKeyPressed(event)
            + void onKeyReleased(event)
            + void onMouseDown(event)
            + void onMousePressed(event)
            + void onMouseReleased(event)
        }

    }

    interface IScene {
        + pushEvent(event)
        + exit()
        + newEntity(name)
        + addEntity(entity)
        + getEntity(name)
        + getEntity(index)
        + removeEntity(name)
        + addScore(float score)
        + forEach(function)
    }

    namespace event {

        interface IEvent {

        }

        class KeyBoardEvent {
            + Key key
        }

        class MouseEvent {
            + x
            + y
            + button
        }

        KeyBoardEvent -up-|> IEvent
        MouseEvent -up-|> IEvent

    }

    namespace component {
        interface IComponent {
            getType()
        }

        class Sprite {
            + pixels
            + width
            + heigth
        }

        class Sound {
            + path
        }

        class AsciiSprite {
            + pixels
            + width
            + heigth
        }

        class Text {
            + text
        }

        Sprite --|> IComponent
        Sound --|> IComponent
        AsciiSprite --|> IComponent
        Text --|> IComponent

    }

    class Vector3 {
        + x
        + y
        + z
    }

    interface IEntity {
        + getPosition()
        + setPosition(pos)
        + addComponent(component)
        + removeComponent(index)
        + removeComponent(type)
        + getComponent(index)
        + getComponent(type)
        + forEach(function)
    }

    Vector3 --* IEntity

    arcade::component::IComponent --* arcade::IEntity
    arcade::IEntity --* arcade::IScene

    arcade::event::IEvent <-- arcade::lib::IGraphic
    arcade::event::IEvent --> arcade::lib::IGame

    arcade::lib::ILibrary -up-* arcade::Core
    arcade::lib::IGraphic -up-|> arcade::lib::ILibrary
    arcade::lib::IGame -up-|> arcade::lib::ILibrary
    arcade::IScene -up-* arcade::Core

}

class Color {
    + a
    + r
    + g
    + b
}

Color --* arcade::component::Sprite

@enduml